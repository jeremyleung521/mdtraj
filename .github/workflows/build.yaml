name: Build and upload to PyPI

on:
  pull_request:
  release:
    types:
      - 'published'

jobs:
  build_wheels:
    name: Build wheels for Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: setup ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "CIBW_BUILD=cp${PYVER//.}-manylinux_x86_64" >> $GITHUB_ENV
        env:
          PYVER: ${{ matrix.python }}
          OSVER: ${{ matrix.os }}
      - name: setup macos
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          # https://cibuildwheel.readthedocs.io/en/stable/faq/#universal2
          echo "CIBW_BUILD=cp${PYVER//.}-macosx_universal2" >> $GITHUB_ENV
        env:
          PYVER: ${{ matrix.python }}
          OSVER: ${{ matrix.os }}
      - name: setup windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: |
          # installing zlib
          vcpkg install zlib:x64-windows
          echo "CIBW_BUILD=cp${PYVER//.}-win_amd64" >> $GITHUB_ENV
        env:
          PYVER: ${{ matrix.python }}
          OSVER: ${{ matrix.os }}
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS: all
          CIBW_BUILD: ${{ env.CIBW_BUILD }}
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"
      - uses: actions/upload-artifact@v4
        with:
          name: artifact-wheels-${{ matrix.os }}-${{ matrix.python }}
          path: ./wheelhouse/*.whl
          overwrite: true

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.12'
      - run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist/*.tar.gz
          overwrite: true

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mdtraj
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    permissions:
        # IMPORTANT: this permission is mandatory for trusted publishing
        id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
